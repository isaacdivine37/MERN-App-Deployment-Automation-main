# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
name: Build and deploy Node.js app to Azure Web App - mern-employer-app
on:
  # Trigger the workflow on push events to the main branch
  push:
    branches:
      - main
    # Only trigger if changes are made to these files or directories
    paths:
      - .github/workflows/azure-web-app-backend-pipeline.yml
      - 'app/server/**'
  
  # Allow manual triggering of the workflow from the GitHub Actions UI
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - uses: actions/checkout@v4
      
      # Set up the Node.js environment
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      
      # Install dependencies
      - name: npm install, build, and test
        run: |
          npm install
        working-directory: app/server
      
      # Create a zip file of the project for deployment
      - name: Zip artifact for deployment
        run: zip -r release.zip .
        working-directory: app/server
      
      # Upload the zipped artifact for use in the deployment job
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: app/server/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # Required for requesting the JWT
    
    steps:
      # Download the artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      # Unzip the artifact to prepare for deployment
      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      # Debug: List contents to verify structure
      - name: List deployment contents
        run: |
          echo "=== Current directory contents ==="
          ls -la
          echo "=== Checking for package.json ==="
          ls -la package.json || echo "package.json not found"
      
      - name: 🔐 Login to Azure
        uses: azure/login@v2
        with:
         client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_C4ABF48A397944228054B8CED287C3F6 }}
         tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7A68F2BF628E4F54A14B6D25C30EFEFE }}
         subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_346DB99210604A59B7A0CF9B84033679 }}
      
      - name: Get GitHub Actions Runner IP
        id: runner-ip
        run: |
          RUNNER_IP=$(curl -s https://api.ipify.org)
          echo "RUNNER_IP=$RUNNER_IP" >> $GITHUB_OUTPUT
          echo "GitHub Actions Runner IP: $RUNNER_IP"
      
      - name: Configure deployment access with runner IP
        run: |
          # Disable SCM IP restrictions inheritance from main site
          az webapp config set --name Backendmernapp --resource-group ISAACMERNAPP --scm-ip-security-restrictions-use-main false
          
          # Remove any existing temporary deployment rules
          az webapp config access-restriction remove --name Backendmernapp --resource-group ISAACMERNAPP --scm-site --rule-name "GitHubActionsTemp" || true
          
          # Allow only the current GitHub Actions runner IP for deployment
          az webapp config access-restriction add \
            --name Backendmernapp \
            --resource-group ISAACMERNAPP \
            --rule-name "GitHubActionsTemp" \
            --action Allow \
            --ip-address "${{ steps.runner-ip.outputs.RUNNER_IP }}/32" \
            --priority 100 \
            --scm-site
      
      - name: 🚀 Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
         app-name: 'Backendmernapp'
         slot-name: 'Production'
         package: '.'
      
      - name: Cleanup - Remove temporary IP access
        if: always()  # Run even if deployment fails
        run: |
          # Remove the temporary GitHub Actions IP rule
          az webapp config access-restriction remove \
            --name Backendmernapp \
            --resource-group ISAACMERNAPP \
            --scm-site \
            --rule-name "GitHubActionsTemp" || true
          echo "Temporary deployment access removed"
