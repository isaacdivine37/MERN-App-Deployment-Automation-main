# Docs for Azure Web Apps Deploy: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - mern-employer-app

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/azure-web-app-backend-pipeline.yml
      - 'app/server/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install
        working-directory: app/server

      - name: Zip artifact for deployment
        run: zip -r release.zip .
        working-directory: app/server

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: app/server/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # Required for Azure login via OIDC
      contents: read   # Required for artifact access

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip -d ./app

      - name: List deployment contents (debug)
        run: |
          echo "=== Deployment directory contents ==="
          ls -la ./app
          echo "=== Checking for package.json ==="
          ls -la ./app/package.json || echo "‚ö†Ô∏è package.json not found"

      - name: üîê Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_C4ABF48A397944228054B8CED287C3F6 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7A68F2BF628E4F54A14B6D25C30EFEFE }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_346DB99210604A59B7A0CF9B84033679 }}

      - name: üõ°Ô∏è Configure IP Restrictions (Sync SCM with Main)
        run: |
          # Get runner's public IP
          RUNNER_IP=$(curl -s https://api.ipify.org)
          echo "GitHub Actions Runner IP: $RUNNER_IP"

          # Ensure SCM uses same IP rules as main site
          echo "‚úÖ Syncing SCM IP restrictions with main site"
          az webapp config access-restriction set \
            --name Backendmernapp \
            --resource-group ISAACMERNAPP \
            --use-same-restrictions-for-scm-site true

          # Remove any existing temp rule (main site)
          echo "üßπ Removing existing temp rule if present"
          az webapp config access-restriction remove \
            --name Backendmernapp \
            --resource-group ISAACMERNAPP \
            --rule-name "TempGitHubDeploy" || echo "‚Üí No existing temp rule to remove"

          # Add current runner IP with highest priority
          echo "‚ûï Adding temporary IP access: $RUNNER_IP/32"
          az webapp config access-restriction add \
            --name Backendmernapp \
            --resource-group ISAACMERNAPP \
            --rule-name "TempGitHubDeploy" \
            --action Allow \
            --ip-address "$RUNNER_IP/32" \
            --priority 1

          # Confirm updated rules
          echo "‚úÖ Updated IP restrictions (main + SCM):"
          az webapp config access-restriction show --name Backendmernapp --resource-group ISAACMERNAPP

      - name: üöÄ Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: Backendmernapp
          slot-name: production
          package: ./app

      - name: Remove Temporary Deployment Access
        if: always()  # Always run cleanup
        run: |
          echo "üîí Removing temporary IP access rule..."
          az webapp config access-restriction remove \
            --name Backendmernapp \
            --resource-group ISAACMERNAPP \
            --rule-name "TempGitHubDeploy" || echo "‚Üí Rule already removed or not found"
          echo "‚úÖ Temporary deployment access removed - your API is secure again"

      - name: Logout from Azure
        if: always()
        run: |
          az account clear
        shell: bash
